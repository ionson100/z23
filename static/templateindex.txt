
<menu textmenu="Оглавление" id="1"/>
<menu text="Я помню чудное мгновенье" textmenu="Я помню" parent="1" >
 Я помню чудное мгновенье

Передо мной явилась ты,
Как мимолетное виденье,
Как гений чистой красоты.
</menu>
<menu text="В томленьях" parent="1" />
 В томленьях грусти безнадежной
 <list>
В тревогах шумной суеты,
Звучал мне долго голос нежный
И снились милые черты.
Шли годы. Бурь порыв мятежный
</list>
Рассеял прежние мечты,
И я забыл твой голос нежный,
Твои небесные черты.
<menu text="Тянулись тихо" />
В глуши, во мраке заточенья
Тянулись тихо дни мои
Без божества, без вдохновенья,
Без слез, без жизни, без любви.
Душе настало пробужденье:
И вот опять явилась ты,
Как мимолетное виденье,
Как гений чистой красоты.
<menu text="в упоенье" /> 
 И сердце бьется в упоенье,
И для него воскресли вновь
И божество, и вдохновенье,
И жизнь, и слезы, и любовь.
<codes>
  static class Helper
  {
       private static readonly char[] Deliter = new[] {'\r', '\n', '\t', ' '};
     
       public static bool CompareWord(this StringBuilder builder, char[] word)
       {
           if (builder.Length == 0) return false;
           if (builder.Length != word.Length) return false;
           bool result = false;
           for (var i = 0; i < word.Length; i++)
               {
                   if (builder[i] == word[i])
                   {
                       result = true;
                   }
                   else
                   {
                       result = false;
                       break;
                   }
                }
            return result;
        }
        public static StringBuilder RemoveFromEnd(this StringBuilder builder, StringBuilder v)
        {
            int i = builder.Length, ii = v.Length;
            return builder.Remove(i - ii, ii);
        }
        public static StringBuilder RemoveFromEnd(this StringBuilder builder, string v)
        {
            int i = builder.Length, ii = v.Length;
            return builder.Remove(i - ii, ii);
        }
        public static bool StartWitchOpenTag(this string s)
        {
            foreach (var t in s)
            {
                if (Deliter.Contains(t)) continue;
                if (t == '<')
            {
           return true;
           }
         return false;
        }
        return true;
       }
  }
</codes>
